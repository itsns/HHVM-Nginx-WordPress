##
# WordPress Optimized Nginx Config for Ubuntu 14.04
##

# Set Nginx user
user www-data;
# Nginx will automatically adjust to the number of cores on your box
worker_processes auto;
# Increase number of files opened by worker_process
worker_rlimit_nofile 100000;
# Set PID File
pid /run/nginx.pid;

events {
	# Determines how many clients will be served by each worker process
	# (Max clients = worker_connections * worker_processes)
	# "Max clients" is also limited by the number of socket connections available on the system (~64k)
	worker_connections 10240;
	# Accept as many connections as possible, after nginx gets notification about a new connection.
	# May flood worker_connections, if that option is set too low.
	multi_accept on;
	# Essential for Linux, optimized to serve many clients with each thread
	use epoll;
}

http {

	##
	# Basic Settings
	##
	
	# Include MIME Types
	include /etc/nginx/mime.types;
	
	# Make sure files with no MIME type are downloaded - not opened
	default_type application/octet-stream;
	
	# Hide Nginx version
	server_tokens off;
	
	##
	# Tweak TCP connections handling
	##
	
	# Sendfile copies data between one FD and other from within the kernel. 
	# More efficient than read() + write(), since the requires transferring data to and from the user space.
	sendfile on;
	
	# Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet, 
	# instead of using partial frames. This is useful for pre-pending headers before calling sendfile, 
	# or for throughput optimization.
	tcp_nopush on;
	
	# Don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;
	
	##
	# Buffer and Timeout Optimizations
	##
	
	# Increase keepalive timeout
	keepalive_timeout 30 30;
	
	# Increase keepalive requests
	keepalive_requests 100000;
	
	# Reset timedout connections and free up some memory
	reset_timedout_connection on;
	
	# Allow Compatibility with Domain Mapping
	server_name_in_redirect off;
	
	# Allow for long domain names
	server_names_hash_bucket_size 512;
	
	# For hosting many WordPress sites on one server
	server_names_hash_max_size 8192;
	types_hash_max_size 2048;

	# Allow for Large File Uploads and set body buffer size
	client_max_body_size 512m;
	client_body_buffer_size 10k;
	
	# Set Timeouts
	client_body_timeout 30;
	client_header_timeout 30;
	send_timeout 30;
	
	# Large Headers for WordPress Multisite
	client_header_buffer_size 256k;
	large_client_header_buffers 4 256k;
	
	##
	# File Cache Optimizations
	##
	
	# Cache information about file descriptors.
	# These setting increase static file serving capability.
	open_file_cache max=200000 inactive=20s; 
	open_file_cache_valid 30s; 
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	##
	# Logging Settings
	##
	
	# Set Log Format
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
	
	# Buffer log writes to speed up IO, or disable them altogether
	access_log /var/log/nginx/access.log main buffer=16k;
	#Only Disable Logging if you are not using Naxsi
	#access_log off;
	
	# Only log critical errors
	error_log /var/log/nginx/error.log crit;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_comp_level  2;
	gzip_min_length  10240;
	gzip_proxied     expired no-cache no-store private auth;
	gzip_vary on;
	gzip_proxied any;
	gzip_buffers 32 8k;
	gzip_http_version 1.1;
	gzip_types text/css text/x-component application/x-javascript application/javascript text/javascript text/x-js text/richtext image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon application/json;
	gzip_disable "MSIE [1-6]\.";
	
	##
	# Web Application Firewall
	##
	
	include /etc/nginx/naxsi_core.rules;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
