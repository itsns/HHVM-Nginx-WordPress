# For 4 Core VM with 4GB RAM
user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
	#1024 Worker connections is a more conservative setting.
	# Determines how many clients will be served by each worker process.
	# (Max clients = worker_connections * worker_processes)
	# "Max clients" is also limited by the number of socket connections available on the system (~64k)
	worker_connections 4096;
	# Accept as many connections as possible, after nginx gets notification about a new connection.
	# May flood worker_connections, if that option is set too low.
	multi_accept on;
	# essential for linux, optmized to serve many clients with each thread
	use epoll;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	types_hash_max_size 2048;
	server_tokens off;
	client_max_body_size 10G;
	client_body_timeout 12;
	client_header_timeout 12;
	keepalive_timeout 15;
	keepalive_requests 100000;
	reset_timedout_connection on;
	send_timeout 10;
	
	# These setting increase static file serving capability.
	open_file_cache max=200000 inactive=5m;
	open_file_cache_valid   2m; 
	open_file_cache_min_uses 1;
	open_file_cache_errors  on;

	server_name_in_redirect off;
	server_names_hash_bucket_size 64;
	
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# Logging Settings
	##
	
	# Buffer log writes to speed up IO, or disable them altogether
	#access_log /var/log/nginx/access.log main buffer=16k;
	access_log off;
	
	# Only log critical errors
	error_log /var/log/nginx/error.log crit;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";
	gzip_comp_level  4;
	gzip_min_length  1000;
	gzip_proxied     expired no-cache no-store private auth;
	gzip_vary on;
	gzip_proxied any;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_types text/css text/x-component application/x-javascript application/javascript text/javascript text/x-js text/richtext image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
